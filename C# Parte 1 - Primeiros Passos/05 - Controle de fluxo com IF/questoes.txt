----- Questão 1 -----
1 - Veja o código abaixo:

int idade = 68;
bool ehIdoso = idade >= 65;

Executando esse código corretamente dentro de um método Main, qual será o valor da variável ehIdoso?

*Obs: Se tiver com dúvida, faça o teste e imprima a variável: Console.WriteLine(ehIdoso); *

R: True

----- Questão 2 ----- 
2 - Abaixo há afirmações referentes às operações lógicas na linguagem C#. Quais delas são verdadeiras?
R: A) O operador lógico AND é representado pelos caracteres && e o OR pelo ||. AND é representado pelo && e OR pelo ||.

B) Os operadores lógicos devem ter no lado esquerdo e direito uma expressão booleana.
Correta, por exemplo:

if (idade > 18 && idade < 65)
{

}
Repare que temos duas expressões booleanas, na esquerda e na direita do operador lógico &&.

----- Questão 3 -----
3 - João está criando uma aplicação para calcular o IR a partir do salário. Ele olhou na tabela de IRPF e implementou as regras para 15% e 22.5%:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

class Programa
{
    static void Main(string[] args)
    {    
        double salario = 3300.0;

        if(salario < 2600.0) 
            Console.WriteLine("A sua aliquota é de 15%");
            Console.WriteLine("Você pode deduzir até R$ 350");

        if(salario < 3750.0) 
            Console.WriteLine("A sua aliquota é de 22,5%");
            Console.WriteLine("Você pode deduzir até R$ 636");
    }    
}

Porém o programa tem um comportamento estranho. Ao compilar e rodar, é impresso:
Você pode deduzir R$ 350
A sua aliquota é de 22,5%
Você pode deduzir R$ 636

Repare que o programa indica que podemos deduzir R$350 E R$636! Como corrigir o problema?
R: O problema é que faltam as chaves na condicional. Sem as chaves, o if apenas executará a primeira instrução depois dele.

if(salario < 2600.0)
{
    Console.WriteLine("A sua aliquota é de 15%");
    Console.WriteLine("Você pode deduzir até R$ 350");
}            

if(salario < 3750.0) 
{
    Console.WriteLine("A sua aliquota é de 22,5%");
    Console.WriteLine("Você pode deduzir até R$ 636");
}

----- Questão 4 -----
4 - Dessa vez, João fez uma implementação para calcular o salário de um funcionário em caso de promoção. Ele fez a seguinte implementação:

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

class Programa
{
    static void Main(string[] args)
    {
        bool foiPromovido = true;

        if(foiPromovido)
        {
            double salario = 4200.0;
        }
        else
        {
            double salario = 3800.0;
        }

        Console.WriteLine(salario);
    }
}

Qual será o resultado da compilação/execução?
R: O código nem compila, pois fora do bloco if/else a variável salario não existe mais. Neste exemplo, a variável salario só é visível dentro dos blocos if/else.

----- Questão 5 -----
5 - O João gostaria de criar um programa sobre Imposto de Renda (IR) e verificou as regras de alíquota. Ele descobriu no site da receita:

De 1900.0 até 2800.0, o IR é de 7.5% e pode deduzir na declaração o valor de R$ 142;
De 2800.01 até 3751.0, o IR é de 15% e pode deduzir R$ 350;
De 3751.01 até 4664.00, o IR é de 22.5% e pode deduzir R$ 636.
Para começar, o João escreveu o seguinte esboço:

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

class Programa
{
    static void Main(string[] args)
    {
        double salario = 3300.0;

        //ifs aqui
    }
}

Agora ajude o João a implementação todas as regras usando condicionais!

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

class Programa
{
    static void Main(string[] args)
    {
        // De 1900.0 até 2800.0 o IR é de 7.5% e pode deduzir R$ 142
        // De 2800.01 até 3751.0 o IR é de 15% e pode deduzir R$ 350
        // De 3751.01 até 4664.00 o IR é de 22.5% e pode deduzir R$ 636

        double salario = 3800.0;

        if(salario >= 1900.0 && salario <= 2800.0)
        {
            Console.WriteLine("A sua aliquota é de 7%");
            Console.WriteLine("Você pode deduzir até R$ 142");
        }
        else if(salario >= 2800.01 && salario <= 3751.0)
        {
            Console.WriteLine("A sua aliquota é de 15%");
            Console.WriteLine("Você pode deduzir até R$ 350");
        }
        else if(salario >= 3751.01 && salario <= 4664.0)
        {
            Console.WriteLine("A sua aliquota é de 22.5%");
            Console.WriteLine("Você pode deduzir até R$ 636");
        }
    }
}

----- OPCIONAL: Comando Switch -----
Vimos como fazer testes com o if, mas e se precisarmos fazer vários testes? Por exemplo, temos uma variável mes e precisamos testar o seu número e imprimir o seu mês correspondente. Vamos ter que fazer 12 ifs?

Para esses casos, existe o comando switch, onde podemos colocar todas as opções ou rumos que o nosso programa pode tomar. Ele funciona da seguinte maneira:

switch (variavelASerTestada) {
    case opção1:
            comando(s) caso a opção 1 tenha sido escolhida
            break;
    case opção2:
            comando(s) caso a opção 2 tenha sido escolhida
            break;
    case opção3:
            comando(s) caso a opção 3 tenha sido escolhida
            break;
    default:
            comando(s) caso nenhuma das opções anteriores tenha sido escolhida
}

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

class Programa
{
    static void Main(String[] args)
    {
        int mes = 10;

        switch (mes)
        {
            case 1:
                Console.WriteLine("O mês é Janeiro");
                break;
            case 2:
                Console.WriteLine("O mês é Fevereiro");
                break;
            case 3:
                Console.WriteLine("O mês é Março");
                break;
            case 4:
                Console.WriteLine("O mês é Abril");
                break;
            case 5:
                Console.WriteLine("O mês é Maio");
                break;
            case 6:
                Console.WriteLine("O mês é Junho");
                break;
            case 7:
                Console.WriteLine("O mês é Julho");
                break;
            case 8:
                Console.WriteLine("O mês é Agosto");
                break;
            case 9:
                Console.WriteLine("O mês é Setembro");
                break;
            case 10:
                Console.WriteLine("O mês é Outubro");
                break;
            case 11:
                Console.WriteLine("O mês é Novembro");
                break;
            case 12:
                Console.WriteLine("O mês é Dezembro");
                break;
            default:
                Console.WriteLine("Mês inválido");
                break;
        }
        Console.ReadLine();
    }
}